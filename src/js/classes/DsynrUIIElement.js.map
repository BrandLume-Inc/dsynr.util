{"version":3,"file":"DsynrUIIElement.js","sourceRoot":"","sources":["../../ts/classes/DsynrUIIElement.ts"],"names":[],"mappings":"AAAA,MAAe,eAAe;IAkB1B,YAAsB,OAAoB,EAAE,cAAsB,EAAE;QAdpE,WAAM,GAAgB,QAAQ,CAAC,IAAI,CAAC;QAU1B,cAAS,GAAY,KAAK,CAAC;QAE7B,aAAQ,GAAW,YAAY,CAAC;QAGpC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAEvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,IAAI,GAAoB,IAAI,CAAC;QACjC,IAAI,eAAe,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAE,KAAK;gBACvD,IAAI,QAAQ,CAAC,OAAO,KAAK,OAAO,EAAE;oBAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,CAAC,CAAC,mCAAmC,CAAC,CAAC;oBACvC,OAAO;iBACV;YACL,CAAC,CAAC,CAAC;SACN;QAED,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC1B,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC;IACL,CAAC;IAED,WAAW,CAAC,QAAiB,KAAK;IAClC,CAAC;IAED,KAAK;IACL,CAAC;IAED,OAAO,CAAC,WAAmB;QACvB,GAAG,CAAC,SAAS,CAAC,CAAC;QACf,kBAAkB;QAElB,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,2EAA2E;YAC3E,0CAA0C;YAC1C,iCAAiC;SACpC;aAAM;YACH,IAAI,OAAO,GAAQ,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxD,IAAI,OAAO,KAAK,IAAI,EAAE;gBAClB,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACrC;SACJ;QACD,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IACnC,CAAC;IAES,YAAY;IACtB,CAAC;IAES,SAAS;IACnB,CAAC;IAED,IAAI;IACJ,CAAC;IAED,IAAI;IACJ,CAAC;IAED,OAAO;IACP,CAAC;IAES,OAAO,CAAC,OAAe,EAAE,IAAY;QAC3C,OAAO,SAAS,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,GAAG,CAAC,CAAC;IACvE,CAAC;;AA9EM,yBAAS,GAAe,EAAE,CAAC","sourcesContent":["abstract class DsynrUIIElement implements DsynrUI {\n\n    static instances: Array<any> = [];\n\n    parent: HTMLElement = document.body;\n    instance: HTMLElement;\n\n    protected content: HTMLElement;\n    protected namePrefix: string;\n    protected nameSuffix: string;\n    protected instanceClasses: string;\n    protected animationClasses: string;\n    protected animate: boolean;\n\n    protected selfAbort: boolean = false;\n\n    private prefAttr: string = 'dsynr-pref';\n\n    protected constructor(element: HTMLElement, preferences: object = {}) {\n        lfn('DsynrUIIElement');\n\n        this.content = element;\n\n        let self: DsynrUIIElement = this;\n        if (DsynrUIIElement.instances.length > 0) {\n            DsynrUIIElement.instances.forEach(function (instance, index) {\n                if (instance.content === element) {\n                    self.selfAbort = true;\n                    l(\"already instantiated, aborting...\");\n                    return;\n                }\n            });\n        }\n\n        if (!this.selfAbort) {\n            this.setPref(preferences);\n            DsynrUIIElement.instances.push(this);\n        }\n    }\n\n    setDefaults(reset: boolean = false): void {\n    }\n\n    setup(): void {\n    }\n\n    setPref(preferences: object): void {\n        lfn('setPref');\n        // l(preferences);\n\n        if (Object.keys(preferences).length > 0) {\n            // l('Object.keys(preferences).length:' + Object.keys(preferences).length);\n            // l(Object.keys(preferences).length > 0);\n            //updateProps(this, preferences);\n        } else {\n            let options: any = getData(this.content, this.prefAttr);\n            if (options !== null) {\n                preferences = JSON.parse(options);\n            }\n        }\n        updateProps(this, preferences);\n    }\n\n    protected addListeners(): void {\n    }\n\n    protected setActive(): void {\n    }\n\n    show(): void {\n    }\n\n    hide(): void {\n    }\n\n    destroy(): void {\n    }\n\n    protected setName(context: string, name: string): string {\n        return concatStr([this.namePrefix, context, this.nameSuffix], '-');\n    }\n}\n"]}