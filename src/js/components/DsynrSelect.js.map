{"version":3,"file":"DsynrSelect.js","sourceRoot":"","sources":["../../ts/components/DsynrSelect.ts"],"names":[],"mappings":"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","sourcesContent":["class DsynrSelect extends DsynrUIIElement {\n\n    content: HTMLSelectElement;\n    private modal: DsynrModal;\n    private trigger: HTMLElement;\n    private options: HTMLOptionsCollection;\n    private showFinder: boolean;\n    private triggerCls: string;\n    private optCls: string;\n    private optionPrefix: string;\n\n\n    constructor(select: HTMLElement, preferences: object = {}) {\n        super(select, preferences);\n        lfn('DsynrSelect');\n        this.setDefaults();\n        this.setup();\n    }\n\n    setDefaults(reset: boolean = false): void {\n        lfn('setDefaults');\n\n        this.nameSuffix = addProp(this, 'nameSuffix', DsynrSelect.instances.length.toString(), reset);\n        this.namePrefix = addProp(this, 'namePrefix', 'dsynrEnhancedSelect', reset);\n        this.optionPrefix = addProp(this, 'namePrefix', concatStr([this.namePrefix, 'option'], '-'), reset);\n        this.instanceClasses = addProp(this, 'instanceClasses', concatStr([this.namePrefix, 'bg-light p-5']), reset);\n        this.showFinder = addProp(this, 'showFinder', false, reset);\n        this.triggerCls = addProp(this, 'btnCls', concatStr([this.namePrefix, 'trigger btn btn-link'], '-'), reset);\n        this.optCls = addProp(this, 'optCls', concatStr([this.optionPrefix, 'hand p-2']), reset);\n    }\n\n    setup(): void {\n        lfn('setup');\n        if (this.content.id === '') {\n            this.content.id = 'dsynrSelect-' + DsynrSelect.instances.length;\n        }\n        this.options = this.content.options;\n        this.setTrigger();\n        l('Select Trigger READY!');\n    }\n\n    show(): void {\n        lfn('show triggered via : ' + this.trigger.id);\n        this.instance = addDiv(this.setName('', this.content.id), this.instanceClasses);\n        let self: DsynrSelect = this;\n        makeArray(this.options).forEach(function (o: HTMLOptionElement, index: number) {\n            self.addESOption(o, index);\n        });\n        this.modal = new DsynrModal(this.instance, {'trigger': 'auto'});\n    }\n\n    private update(selectOption: HTMLElement): void {\n        lfn('update');\n        this.content.selectedIndex = parseInt(getData(selectOption, 'index'));\n    }\n\n    private addESOption(o: HTMLOptionElement, i: number): void {\n        lfn('addESOption');\n        let oid: string = concatStr([this.optionPrefix, this.content.id, i], '-');\n        addDiv(oid, this.optCls, this.instance);\n        let oe: HTMLOptionElement = <HTMLOptionElement>getElementById(oid);\n        oe.textContent = o.text;\n        setData(oe, 'index', o.index.toString());\n\n        let self: DsynrSelect = this;\n        addListener(oe.id, 'click', function () {\n            lclk(oe.id);\n            self.update(oe);\n        });\n    }\n\n    private setTrigger(): void {\n        lfn('addTrigger');\n        this.trigger = addDiv(this.setName('btn', this.content.id), this.triggerCls, <HTMLElement>this.content.parentElement);\n        addText(this.options[0].text, this.trigger);\n        let self: DsynrSelect = this;\n        addListener(this.trigger.id, 'click', function () {\n            self.show();\n        });\n        hide(this.content);\n    }\n\n    private getOption() {\n        lfn('dsynrSelect_getDsynrSelectOption');\n    }\n\n    hide() {\n        lfn('dsynrSelect_exitDsynrSelect');\n    }\n}\n\nfunction autoEnhanceSelects(selectClass: string = 'dsynrSelect'): void {\n    lfn('autoEnhanceSelects');\n    makeArray(getElementsByClass(selectClass)).forEach(function (select, index) {\n        new DsynrSelect(select);\n    });\n}"]}