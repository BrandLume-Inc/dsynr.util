{"version":3,"file":"obj.js","sourceRoot":"","sources":["../ts/obj.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,CAAC,UAAe;IAC9B,OAAO,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAClC,CAAC;AAED,SAAS,mBAAmB,CAAC,SAAc;IACvC,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AACnE,CAAC;AAED,SAAS,iBAAiB,CAAC,GAAW;IAClC,IAAI,IAAI,GAAe,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC;AAED,SAAS,OAAO,CAAC,GAAW,EAAE,QAAgB,EAAE,UAAe,SAAS,EAAE,YAAqB,KAAK;IAChG,IAAI,SAAS,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;QAC5C,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,QAAQ,EAAE;YACjC,YAAY,EAAE,IAAI;YAClB,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,IAAI;YACd,KAAK,EAAE,OAAO;SACjB,CAAC,CAAC;KACN;IACD,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;AACzB,CAAC;AAED,SAAS,WAAW,CAAC,GAAW,EAAE,OAAe;IAC7C,GAAG,CAAC,gBAAgB,CAAC,CAAC;IACtB,KAAK,IAAI,IAAI,IAAI,OAAO,EAAE;QACtB,IAAI,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;YAC9B,GAAG,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;SAC7B;QACD,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;KAC7B;AACL,CAAC;AAED,SAAS,WAAW,CAAC,OAAsB,EAAE,GAAW;IACpD,GAAG,CAAC,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC,OAAO,CAAC,CAAC;IACX,IAAI,KAAK,GAAY,KAAK,CAAC;IAC3B,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;QAC1B,IAAI,CAAC,KAAK,GAAG,EAAE;YACX,KAAK,GAAG,IAAI,CAAC;YACb,OAAO;SACV;IACL,CAAC,CAAC,CAAC;IACH,CAAC,CAAC,KAAK,CAAC,CAAC;IACT,OAAO,KAAK,CAAC;AACjB,CAAC","sourcesContent":["function makeArray(collection: any): Array<any> {\n    return Array.from(collection);\n}\n\nfunction get_rand_array_item(mixed_arr: any): any {\n    return mixed_arr[Math.floor(Math.random() * mixed_arr.length)];\n}\n\nfunction get_rand_obj_item(obj: object) {\n    let keys: Array<any> = Object.keys(obj);\n    return obj[keys[keys.length * Math.random() << 0]];\n}\n\nfunction addProp(obj: object, propName: string, propVal: any = undefined, overwrite: boolean = false): any {\n    if (overwrite || !obj.hasOwnProperty(propName)) {\n        Object.defineProperty(obj, propName, {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: propVal\n        });\n    }\n    return obj[propName];\n}\n\nfunction updateProps(obj: object, propSet: object): void {\n    lfn('updateProps...');\n    for (let prop in propSet) {\n        if (propSet.hasOwnProperty(prop)) {\n            obj[prop] = propSet[prop];\n        }\n        l(prop + ':' + obj[prop]);\n    }\n}\n\nfunction hasInstance(objList: Array<object>, obj: object): boolean {\n    lfn('hasInstance');\n    l(objList);\n    let hasIt: boolean = false;\n    objList.forEach(function (o, i) {\n        if (o === obj) {\n            hasIt = true;\n            return;\n        }\n    });\n    l(hasIt);\n    return hasIt;\n}"]}